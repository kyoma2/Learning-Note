--直接插入排序--
  insertsort(int A[]){
    for (int i = 2; i <= n; i++) {   ////!!!!!!!! i从2开始，因为只需要n-1趟
      if (A[i]<A[i - 1]) {   ///如果已有序,continue.
        A[0] = A[i];
        for (int j = i - 1; A[0]<A[j];j--)
          A[j + 1] = A[j];
        A[j + 1] = A[0];
      }
    }
  }
--折半插入排序--
void InsertSort(int A[],int n){
	int low, mid, high;
	for (int i = 2; i <= n; i++) {
		if (A[i]<A[i - 1]) {
			A[0] = A[i];
			low = 1; high = i-1;
			while (low <= high) {
				mid = (low + high)/2;
				if (A[mid] <= A[i])    /////  如果等于成立,因为是high+1,所以high不能动,只能动 low.
					low = mid + 1;
				else high = mid - 1;
			}
			for (int j = i - 1; j >= high + 1;j--) /////!!!!!!这里最后A[0]插入的位置是 high + 1 ;
				A[j + 1] = A[j];
			A[j + 1] = A[0];
		}
	}
}

--希尔排序--
void  Shell(int A[],int n){
	  int dk;
		for(dk = n/2;dk>=1;dk = dk/2){ 
			for(int i = dk+1; i<= n;i++){   /////!!!! 从这起 下面就是简单插入排序.
        if (A[i]<A[i-dk]){
          A[0] = A[i];
          for(int j = i-dk;j>0 && A[i]<A[j];j=j-dk)
            A[j+dk] = A[j];
          A[j+dk] = A[0];
			  }
		  }
	  }
}


--冒泡排序--
void bubble(int A[], int n) {
	for (int i = 1;i <= n - 1;i++) {
		bool flag = false;
		for (int j = n - 1;j >= i;j--) {
			if (A[j] < A[j - 1]) {
				swap(A, j, j-1);
				flag = true;
			}
		}
		if (flag = false)
			return;
	}
}



