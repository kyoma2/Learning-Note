--邻接表结构--
Graph[Adjlist,vexnum,arcnum]
Adjlist[Vnode]
Vnode[data,*firstarc]
ArcNode[adjvex,*nextarc]
Vnode-->ArcNode;

--十字链表结构--
Graph[Adjlist,vexnum,arcnum]
Adjlist[Vnode]
Vnode[data,*firstinsame,*firstoutsame]
ArcNode[tail,head,*hlink,*tlink]
Vnode-->ArcNode;


--图的遍历--
--bfs--
"""完全当做层次遍历(队列),需注意不是连通图,所以需要套一层循环,扫描每个点是否被访问过."""
  void *bfs(Graph G,int v) {
      visit(v);  
      visited[v] = 1;
      EnQueue(v);
      While(!empty(Queue)){
          for (auto p = G.Adjlist[v].firstarc, p ,p=p->nextarc){
              n = p->adjvex;
              if (visited[n] == 0){
                  visit(n);
                  visited[n] = 1;
                  EnQueue(Q,n);
              }
          }
      }
  }
  
  
  --dfs--
  """没什么特别的,递归逻辑就是([访问,找下一个点],repeat)"""
    void dfs(Graph G,int v) {
      visit(v);
      visited[v] = 1;
      for (auto p = G.adjlist[v].firstarc,p,p=p->nextarc){
          n = p->adjvex;
          if (visited[n] == 0){
              dfs(G,n);
          }
      }
  }
  

